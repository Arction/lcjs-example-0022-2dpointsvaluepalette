(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),{lightningChart:o,PointShape:r,PalettedFill:n,LUT:i,regularColorSteps:l,Themes:d}=s,{createProgressiveTraceGenerator:h}=a(613),c=o({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:d[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("2D points value palette coloring").setPadding({right:20}).setCursorMode("show-all-interpolated"),p=new n({lookUpProperty:"value",lut:new i({units:"trace dist (y)",interpolate:!0,percentageValues:!0,steps:l(0,1,c.getTheme().examples.intensityColorPalette).map(((e,t,a)=>t===a.length-1?{...e,color:e.color.setA(0)}:e))})});h().setNumberOfPoints(1e3).generate().toPromise().then((e=>{const t=c.addPointSeries({pointShape:r.Circle}).setName("Outliers").setPointSize(3).setPointFillStyle(p).setIndividualPointValueEnabled(!0),a=[];e.forEach((e=>a.push(...new Array(Math.round(50*Math.random())).fill(0).map(((t,a)=>{const s=e.y+10*(2*Math.random()-1);return{x:e.x,y:s,value:Math.abs(s-e.y)}}))))),console.log(a),t.add(a),c.addLineSeries({dataPattern:{pattern:"ProgressiveX"}}).setName("Trace stroke").add(e).setStrokeStyle((e=>e.setThickness(5))),c.addLegendBox().add(c).setAutoDispose({type:"max-width",maxWidth:.2})}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);