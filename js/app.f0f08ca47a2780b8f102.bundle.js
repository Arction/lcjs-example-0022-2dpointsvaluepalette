(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const r=a(809),{lightningChart:s,PointShape:o,PalettedFill:n,LUT:i,ColorRGBA:l,Themes:d}=r,{createProgressiveTraceGenerator:h}=a(27),u=s().ChartXY({}).setTitle("2D points value palette coloring").setPadding({right:20}),p=new n({lookUpProperty:"value",lut:new i({units:"trace dist (y)",interpolate:!0,steps:[{value:0,color:l(255,255,127)},{value:2,color:l(255,0,0)},{value:10,color:l(255,0,0,0)}]})});h().setNumberOfPoints(1e3).generate().toPromise().then((e=>{const t=u.addPointSeries({pointShape:o.Circle}).setName("Outliers").setPointSize(3).setPointFillStyle(p).setIndividualPointValueEnabled(!0),a=[];e.forEach((e=>a.push(...new Array(Math.round(50*Math.random())).fill(0).map(((t,a)=>{const r=e.y+10*(2*Math.random()-1);return{x:e.x,y:r,value:Math.abs(r-e.y)}}))))),t.add(a),u.addLineSeries({dataPattern:{pattern:"ProgressiveX"}}).setName("Trace stroke").add(e).setStrokeStyle((e=>e.setThickness(5))),u.addLegendBox().add(u).setAutoDispose({type:"max-width",maxWidth:.2})}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);