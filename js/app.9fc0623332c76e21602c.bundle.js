(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const r=a(377),{lightningChart:s,emptyLine:o,PalettedFill:l,LUT:n,regularColorSteps:i,emptyFill:d,Themes:h}=r,{createProgressiveTraceGenerator:p}=a(613),u=s({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({theme:h[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("2D points value palette coloring").setCursorMode("show-all-interpolated"),c=new l({lookUpProperty:"value",lut:new n({units:"trace dist (y)",interpolate:!0,percentageValues:!0,steps:i(0,1,u.getTheme().examples.intensityColorPalette).map(((e,t,a)=>t===a.length-1?{...e,color:e.color.setA(0)}:e))})});p().setNumberOfPoints(1e3).generate().toPromise().then((e=>{const t=u.addPointLineAreaSeries({dataPattern:null,lookupValues:!0}).setName("Outliers").setPointSize(3).setPointFillStyle(c).setStrokeStyle(o),a=[];e.forEach((e=>a.push(...new Array(Math.round(50*Math.random())).fill(0).map(((t,a)=>{const r=e.y+10*(2*Math.random()-1);return{x:e.x,y:r,value:Math.abs(r-e.y)}}))))),t.appendJSON(a,{x:"x",y:"y",lookupValue:"value"}),u.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setName("Trace stroke").appendJSON(e).setStrokeStyle((e=>e.setThickness(5))).setAreaFillStyle(d),u.addLegendBox().add(u).setAutoDispose({type:"max-width",maxWidth:.2})}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);